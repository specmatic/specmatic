openapi: 3.0.3
info:
  title: Product API
  version: 1.0.0
paths:
  /products:
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
            examples:
              ADD_PRODUCT_SUCCESS:
                value:
                  name: "Widget"
                  price: 9.99
                  category: "Books"
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
              examples:
                ADD_PRODUCT_SUCCESS:
                  value:
                    id: 1
                    name: "Widget"
                    price: 9.99
                    category: "Books"
    get:
      summary: List all products
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                LIST_PRODUCTS_SUCCESS:
                  value:
                    - id: 1
                      name: "Widget"
                      category: "Books"
                      price: 9.99
                    - id: 2
                      name: "Gadget"
                      price: 19.99
                      category: "Electronics"
components:
  schemas:
    ProductRequest:
      oneOf:
        - $ref: "#/components/schemas/ProductDetails"
        - $ref: "#/components/schemas/ProductReference"
    ProductDetails:
      type: object
      required:
        - name
        - price
        - category
        - manufacturer
        - warehouse
      properties:
        name:
          type: string
        price:
          type: number
        category:
          $ref: "#/components/schemas/Category"
        manufacturer:
          oneOf:
            - $ref: "#/components/schemas/ManufacturerDetails"
            - $ref: "#/components/schemas/ManufacturerReference"
        warehouse:
          oneOf:
            - $ref: "#/components/schemas/WarehouseDetails"
            - $ref: "#/components/schemas/WarehouseReference"
    WarehouseDetails:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string
    WarehouseReference:
      type: object
      required:
        - warehouse_id_ref
        - warehouse_region
      properties:
        warehouse_id_ref:
          type: integer
        warehouse_region:
          type: string
    Manufacturer:
      allOf:
        - $ref: "#/components/schemas/ManufacturerId"
        - $ref: "#/components/schemas/ManufacturerDetails"
    ManufacturerId:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    ManufacturerDetails:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string
    ManufacturerReference:
      type: object
      required:
        - manufacturer_id_ref
        - manufacturer_region
      properties:
        manufacturer_id_ref:
          type: integer
        manufacturer_region:
          type: string
    ProductReference:
      type: object
      required:
        - product_id_ref
      properties:
        product_id_ref:
          type: integer
    Product:
      allOf:
        - $ref: "#/components/schemas/ProductId"
        - $ref: "#/components/schemas/ProductDetails"
    ProductId:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    Category:
      type: string
      enum:
        - Electronics
        - Clothing
        - Books
